{"version":3,"sources":["panels/Home.js","panels/Spiner.js","panels/AddPostEnd.js","App.js","index.js","img/default_img.PNG"],"names":["Home","id","props","go","fetchedUser","title","top","name","value","innquiryInfo","field1","onChange","сhangeForms","type","placeholder","field2","field3","field4","accept","isReady","male","className","src","imageUrl","img","alt","testTex1","size","onClick","sendForms","disabled","level","Spiner","style","display","alignItems","flexDirection","marginTop","AddPostEnd","token","group_id","defaultPhoto","postPhotoUrl","connect","send","savePhoto","server","photos_list","hash","App","e","setState","activePanel","currentTarget","dataset","to","createPoll","answers","state","createMessage","message","poll","photo","attachments","guid","Math","floor","random","data","Date","postData","round","file","files","reader","FileReader","onloadend","result","readAsDataURL","imgForMessage","postSendId","subscribe","detail","sex","request_id","response","upload_url","url","formData","FormData","append","fetch","method","body","headers","then","json","catch","error","postPhoto","owner_id","post_id","console","log","this","length","React","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.66fae2dd.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Panel, Button, Group, Div,  PanelHeader, Input, FormLayout} from '@vkontakte/vkui';\r\nimport File from \"@vkontakte/vkui/dist/components/File/File\";\r\nimport img from \"../img/default_img.PNG\"\r\n\r\nconst Home = ({ id, go, fetchedUser, ...props }) => {\r\n\treturn (\r\n\t\t<Panel id={id}>\r\n\t\t<PanelHeader>Найти потеряшку</PanelHeader>\r\n\r\n\t\t<Group title=\"Для отправки опроса заполните пожалуйста формы:\">\r\n\t\t\t<Div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<FormLayout>\r\n\t\t\t\t\t\t\t<Input  top=\"Кого ищешь?\" name=\"field1\" value={props.innquiryInfo.field1} onChange={props.сhangeForms} type=\"text\" placeholder=\"Кого ищешь?\"/>\r\n\t\t\t\t\t\t\t<Input  top=\"Время встречи\" name=\"field2\" value={props.innquiryInfo.field2}  onChange={props.сhangeForms}  type=\"text\" placeholder=\"Время встречи\"/>\r\n\t\t\t\t\t\t\t<Input  top=\"Где встретились\" name=\"field3\"value={props.innquiryInfo.field3}   onChange={props.сhangeForms}  type=\"text\" placeholder=\"Где встретились\"/>\r\n\t\t\t\t\t\t\t<Input  top=\"Приметы, одежда\" name=\"field4\" value={props.innquiryInfo.field4}  onChange={props.сhangeForms}  type=\"text\" placeholder=\"Приметы, одежда\"/>\r\n\t\t\t\t\t\t\t<File  top=\"Прикрепить фото (необязательно):\" onChange={props.сhangeForms} name=\"file\"  type=\"file\" placeholder=\"Прикрепить фото\" accept=\"image/*\" />\r\n\t\t\t\t\t\t</FormLayout>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{props.innquiryInfo.isReady ? <Div>Ищу {props.innquiryInfo.field1}. {props.innquiryInfo.field2} встретились {props.innquiryInfo.field3}. {props.innquiryInfo.field4}. {props.innquiryInfo.male ? \"Понравилась\" : \"Понравился\"},\r\n                        отзовись <div><img className=\"imgFormat\" src={props.innquiryInfo.imageUrl || img} alt={\"img\"}/></div></Div> : <div/>}\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t{props.innquiryInfo.testTex1}\r\n\t\t\t\t{props.innquiryInfo.isReady ? <Button size=\"xl\" onClick={props.sendForms}>Отправить опрос</Button> : <Button size=\"xl\" disabled level=\"2\">Отправить опрос</Button> }\r\n\r\n\t\t\t</Div>\r\n\t\t</Group>\r\n\t</Panel>)\r\n};\r\n\r\n\r\n\r\n\r\nHome.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n\tsendForms: PropTypes.func.isRequired,\r\n\tfetchedUser: PropTypes.shape({\r\n\t\tphoto_200: PropTypes.string,\r\n\t\tfirst_name: PropTypes.string,\r\n\t\tlast_name: PropTypes.string,\r\n\t\tcity: PropTypes.shape({\r\n\t\t\ttitle: PropTypes.string,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport {Panel, PanelHeader} from '@vkontakte/vkui';\nimport Spinner from \"@vkontakte/vkui/dist/components/Spinner/Spinner\";\nimport PropTypes from 'prop-types';\n\n\nconst Spiner = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader>Найти потеряшку</PanelHeader>\n\t\t<div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\n\t\t\t<Spinner size=\"large\" style={{ marginTop: 20 }} />\n\t\t</div>\n\t</Panel>\n);\n\nSpiner.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Spiner;\n","import React from 'react';\nimport {Panel, PanelHeader} from '@vkontakte/vkui';\nimport Spinner from \"@vkontakte/vkui/dist/components/Spinner/Spinner\";\nimport PropTypes from 'prop-types';\nimport Div from \"@vkontakte/vkui/dist/components/Div/Div\";\n\n\nconst AddPostEnd = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader>Найти потеряшку</PanelHeader>\n\t\t<Div>\n\t\t\t<h1>Ваш опрос успешно добавлен!</h1>\n\t\t</Div>\n\t</Panel>\n);\n\nAddPostEnd.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default AddPostEnd;\n","import React from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport {View} from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport Home from './panels/Home';\nimport \"./App.css\"\nimport Spiner from \"./panels/Spiner\";\nimport AddPostEnd from \"./panels/AddPostEnd\";\n\n//личный токен админа группы\nconst token = \"8562720b7714ff2af73756a192b2b17d934eff7232f8e4110d614ba8277416eab25f57e933f84f7fa404b\";\n\n//id альбома для загрузки фотографий\nconst album_id = \"269063524\";\n\n//id группы с которой работаем\nconst group_id = \"186665203\";\n\n//картинка по умлочанию должна находиться уже в альбоме группы, при открытии фотки данные можно взять со строки адреса в формате как приведенно ниже\nconst defaultPhoto = \"photo-186665203_457239019\";\n\n\n\n\n\n//получение ссылки на загрузку фотки\nconst postPhotoUrl = () => {\n    connect.send(\"VKWebAppCallAPIMethod\", {\n        \"method\": \"photos.getUploadServer\", \"request_id\": \"photoUrl\", \"params\": {\n            \"album_id\": album_id, \"group_id\": group_id,\n            \"v\": \"5.101\", \"access_token\": token\n        }\n    });\n};\n\nconst postPhoto = (url, photo) => {\n    let formData = new FormData();\n    formData.append('photo', photo);\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    fetch(proxyurl + url, {\n        method: 'POST',\n        body: formData,\n        headers: {\n            'Access-Control-Allow-Origin': '*'\n        },\n    })\n        .then(function (response) {\n            return response.json();\n        })\n        .then(function (data) {\n            if (data) {\n                savePhoto(data.server, data.photos_list, data.hash);\n            } else {\n                // proccess server errors\n            }\n        })\n        .catch(function (error) {\n            // proccess network errors\n        });\n};\n\nconst savePhoto = (server, photos_list, hash) => {\n    connect.send(\"VKWebAppCallAPIMethod\", {\n        \"method\": \"photos.save\", \"request_id\": \"photoSave\", \"params\": {\n            \"album_id\": album_id, \"group_id\": group_id,\n            \"server\": server, \"photos_list\": photos_list, \"hash\": hash, \"v\": \"5.101\", \"access_token\": token\n        }\n    });\n};\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activePanel: 'home',\n            fetchedUser: null,\n            field1: \"\",\n            field2: \"\",\n            field3: \"\",\n            field4: \"\",\n            img: null,\n            imageUrl: null,\n            isReady: false,\n            male: true,\n            imgForMessage: defaultPhoto,\n            postSendId: 0,\n            poll: \"\"\n        };\n    }\n\n    componentDidMount() {\n        connect.subscribe((e) => {\n            switch (e.detail.type) {\n                case 'VKWebAppGetUserInfoResult':\n                    this.setState({fetchedUser: e.detail.data});\n                    if (e.detail.data.sex === 1) {\n                        this.setState({male: false});\n                    }\n                    break;\n                case 'VKWebAppCallAPIMethodResult':\n                    switch (e.detail.data.request_id) {\n                        case 'photoUrl':\n                            this.setState({imageUrl: e.detail.data.response.upload_url});\n                            postPhoto(e.detail.data.response.upload_url, this.state.img);\n                            break;\n                        case 'photoSave':\n                            this.setState({imgForMessage: `photo${e.detail.data.response[0].owner_id}_${e.detail.data.response[0].id}`});\n                            this.createPoll();\n                            break;\n                        case 'isCreatePoll':\n                            this.setState({poll: `poll${e.detail.data.response.owner_id}_${e.detail.data.response.id}`});\n                            let message = `Ищу ${this.state.field1}. ${this.state.field2} встретились ${this.state.field3}. ${this.state.field4}. Отзовись в опросе 💬`;\n                            let photo = this.state.imgForMessage;\n                            this.createMessage(message, this.state.poll, photo);\n                            break;\n                        case 'sendWall':\n                            this.setState({\n                                postSendId: e.detail.data.response.post_id, field1: \"\",\n                                field2: \"\", field3: \"\", field4: \"\", img: null, activePanel: \"addpost\"\n                            });\n                            break;\n                        default:\n                            console.log(e);\n                    }\n                    console.log(e);\n                    break;\n                default:\n                    console.log(e);\n            }\n        });\n        connect.send('VKWebAppGetUserInfo', {});\n\n    }\n\n    componentDidUpdate() {\n        if (this.state.isReady === false && this.state.field1.length > 0 && this.state.field2.length > 0 && this.state.field3.length > 0 && this.state.field4.length > 0) {\n            this.setState({isReady: true})\n        }\n        if (this.state.isReady === true && this.state.field1.length === 0 && this.state.field2.length === 0 && this.state.field3.length === 0 && this.state.field4.length === 0) {\n            this.setState({isReady: false})\n        }\n    }\n\n    go = (e) => {\n        this.setState({activePanel: e.currentTarget.dataset.to})\n    };\n\n    createPoll = () => {\n        let answers = this.state.name ? '[\"Возможно это я\",\"Пиши, я ее знаю\",\"Посмотреть результаты\"]' : '[\"Возможно это я\",\"Пиши, я его знаю\",\"Посмотреть результаты\"]';\n        connect.send(\"VKWebAppCallAPIMethod\", {\n            \"method\": \"polls.create\", \"request_id\": \"isCreatePoll\", \"params\": {\n                \"question\": \"Хелп\",\n                \"is_anonymous\": \"0\",\n                \"is_multiple\": \"0\",\n                \"owner_id\": \"-185650440\",\n                \"add_answers\": answers,\n                \"v\": \"5.101\",\n                \"access_token\": token\n            }\n        });\n    };\n\n    createMessage = (message, poll, photo) => {\n        let attachments = `${photo}, ${poll}`;\n        //сгенерированный guid\n        let guid = Math.floor(1000000000 + Math.random() * (9000000000 + 1 - 1000000000));\n\n\n        let data = +new Date();\n        let postData = Math.round(data/1000)+86400;\n\n        connect.send(\"VKWebAppCallAPIMethod\", {\n            \"method\": \"wall.post\", \"request_id\": \"sendWall\", \"params\": {\n                \"owner_id\": `-${group_id}`,\n                \"from_group\": \"1\",\n                \"signed\": \"0\",\n                \"publish_date\": +postData,\n                \"message\": message,\n                \"attachments\": attachments,\n                \"guid\": guid,\n                \"v\": \"5.101\",\n                \"access_token\": token\n            }\n        });\n    };\n\n    sendForms = () => {\n        this.setState({activePanel: \"spinner\"})\n        if (this.state.img === null) {\n            this.createPoll();\n        } else {\n            postPhotoUrl()\n        }\n    };\n\n    сhangeForms = (e) => {\n        switch (e.currentTarget.name) {\n            case 'file':\n                const file = e.currentTarget.files[0];\n                const reader = new FileReader();\n                reader.onloadend = () => {\n                    this.setState({\n                        imageUrl: reader.result\n                    })\n                };\n                if (file) {\n                    reader.readAsDataURL(file);\n                    this.setState({\n                        imageUrl: reader.result\n                    })\n                } else {\n                    this.setState({\n                        imageUrl: \"\"\n                    })\n                }\n                this.setState({img: e.currentTarget.files[0]});\n                break;\n            default:\n                this.setState({[e.currentTarget.name]: e.currentTarget.value});\n        }\n    };\n\n    render() {\n        return (\n            <View activePanel={this.state.activePanel}>\n                <Home id=\"home\" fetchedUser={this.state.fetchedUser} innquiryInfo={this.state}\n                      сhangeForms={this.сhangeForms} go={this.go}\n                      sendForms={this.sendForms}/>\n                <Spiner id=\"spinner\" fetchedUser={this.state.fetchedUser} innquiryInfo={this.state} go={this.go}/>\n                <AddPostEnd id=\"addpost\" fetchedUser={this.state.fetchedUser} innquiryInfo={this.state} go={this.go}/>\n            </View>\n        );\n    }\n}\n\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/default_img.ec5260f4.PNG\";"],"sourceRoot":""}